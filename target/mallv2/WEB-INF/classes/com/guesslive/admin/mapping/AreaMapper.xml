<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guesslive.admin.dao.AreaMapper">
  
	<insert id="saveArea" useGeneratedKeys="true" keyProperty="id">
	   	insert into t_area_active 
	   	<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="name != null">
				name,
			</if>
			<if test="imgurl != null">
				imgurl,
			</if>
			<if test="type != null">
				type,
			</if>
			<if test="pid != null">
				pid,
			</if>
			<if test="starttime != null">
				starttime,
			</if>
			<if test="endtime != null ">
				endtime,
			</if>
			<if test="acttitle != null ">
				acttitle,
			</if>
			<if test="description != null ">
				description,
			</if>
			<if test="weight != null ">
				weight,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="name != null">
				#{name},
			</if>
			<if test="imgurl != null">
				#{imgurl},
			</if>
			<if test="type != null">
				#{type},
			</if>
			<if test="pid != null">
				#{pid},
			</if>
			<if test="starttime != null">
				#{starttime},
			</if>
			<if test="endtime != null ">
				#{endtime},
			</if>
			<if test="acttitle != null ">
				#{acttitle},
			</if>
			<if test="description != null ">
				#{description},
			</if>
			<if test="weight != null ">
				#{weight},
			</if>
		</trim>
	</insert>
	
	<select id="selectGoodsAreaList" resultType="AreaActive">
	   	select ga.*, (SELECT count(1) FROM t_area_goods WHERE areaid = ga.id) goodsnum
	   	from t_area_active ga 
	   	where status in (0,1)
		  	<if test="area != null and area.name != null and area.name != ''">
		  		and ga.name = #{area.name}
		  	</if>
		  	<if test="area != null and area.type != null ">
		  		and ga.type = #{area.type}
		  	</if>
		order by starttime desc
   	  	limit #{start},#{rows}
	</select>
	
	<select id="selectGoodsAreaCount" resultType="int">
	   	select count(*) from t_area_active 
	   	<where>
		   	<if test="name != null and name != ''">
		  		and name = #{name}
		  	</if>
		  	<if test="type != null ">
		  		and type = #{type}
		  	</if>
	   	</where>
	</select>
	
	<select id="selectAreaGoods" resultType="Goods">
		select
			CASE WHEN (select MIN(t.marketprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.marketprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.marketprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.marketprice),'-',max(t.marketprice)) from t_product t where t.goodsid = g.goodsid) END marketprice,
			CASE WHEN (select MIN(t.saleprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.saleprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.saleprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.saleprice),'-',max(t.saleprice)) from t_product t where t.goodsid = g.goodsid) END saleprice,
			(select sum(t.stock) from t_product t where t.goodsid = g.goodsid) stock,
			CASE WHEN (select MIN(t.settleprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.settleprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.settleprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.settleprice),'-',max(t.settleprice)) from t_product t where t.goodsid = g.goodsid) END settleprice,
			CASE WHEN (select MIN(t.activeprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.activeprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.activeprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.activeprice),'-',max(t.activeprice)) from t_product t where t.goodsid = g.goodsid) END activeprice,
			IFNULL((select t.brandname from t_brand t where t.brandcode = g.brandCode),'') brandname,
			(select t.catename from t_goods_category t where t.id = g.cateCode)cateName,
			(select t.catename from t_goods_category t where t.id = g.subcateCode)subcateName,
			(select point from t_agent_point t where t.pointId = g.pointid) point,
			(select t.agentname from t_agent t where t.id = g.agentid)agentname,  
			g.goodsid,goodsname,goodssn,iconurl from t_area_goods a LEFT JOIN t_goods g ON a.goodsid=g.goodsid
	     	where a.areaid=#{areaid} and g.status =5
	      	limit #{start},#{rows}
	</select>
	
	<select id="selectAreaGoodsCount" resultType="int">
	    select count(*) from t_area_goods a LEFT JOIN t_goods g ON a.goodsid=g.goodsid where areaid=#{areaid} and status =5
	</select>
	
	<insert id="saveToGoodsArea" useGeneratedKeys="true" keyProperty="id">
	    insert into t_area_goods (areaid,goodsid) values(#{areaid},#{goodsid})
	</insert>
	
	<delete id="deleteAreadGoods" parameterType="int">
    	delete from t_area_goods where areaid=#{areaid} 
    	<if test="goodsid!=null ">
		 	and goodsid=#{goodsid}
    	</if>
	</delete>
	
		<!-- 删除专区活动记录 -->
	<delete id="deleteAreaActive" parameterType="int" >
	    delete from t_area_active where id = #{id,jdbcType=INTEGER}
	</delete>

	<update id="updateAreaActive" parameterType="AreaActive">
		update t_area_active
		<set>
			<if test="imgurl != null and imgurl != ''">
				imgurl = #{imgurl},
			</if>
			<if test="name != null and name != ''">
				name = #{name},
			</if>
			<if test="acttitle != null and acttitle != ''">
				acttitle = #{acttitle},
			</if>
			<if test="pid != null and pid != ''">
				pid = #{pid},
			</if>
			<if test="type != null and type != ''">
				type = #{type},
			</if>
			<if test="starttime != null and starttime != ''">
				starttime = #{starttime},
			</if>
			<if test="starttime != null and starttime != ''">
				starttime = #{starttime},
			</if>
			<if test="weight != null and weight != ''">
				weight = #{weight},
			</if>
			<if test="ispro != null and ispro != ''">
				ispro = #{ispro},
			</if>
			<if test="description != null and description != ''">
				description = #{description},
			</if>
			<if test="status != null and status != ''">
				status = #{status},
			</if>
		</set>
		where id=#{id}
	</update>
	
	<select id="selectGoods" resultType="Goods">
	    select 
			CASE WHEN (select MIN(t.marketprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.marketprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.marketprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.marketprice),'-',max(t.marketprice)) from t_product t where t.goodsid = g.goodsid) END marketprice,
			CASE WHEN (select MIN(t.saleprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.saleprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.saleprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.saleprice),'-',max(t.saleprice)) from t_product t where t.goodsid = g.goodsid) END saleprice,
			(select sum(t.stock) from t_product t where t.goodsid = g.goodsid) stock,
			CASE WHEN (select MIN(t.settleprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.settleprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.settleprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.settleprice),'-',max(t.settleprice)) from t_product t where t.goodsid = g.goodsid) END settleprice,
			CASE WHEN (select MIN(t.activeprice) from t_product t where t.goodsid = g.goodsid)=(select max(t.activeprice) from t_product t where t.goodsid = g.goodsid) THEN (select max(t.activeprice) from t_product t where t.goodsid = g.goodsid) ELSE (select CONCAT(MIN(t.activeprice),'-',max(t.activeprice)) from t_product t where t.goodsid = g.goodsid) END activeprice,
			IFNULL((select t.brandname from t_brand t where t.brandcode = g.brandCode),'') brandname,
			(select t.catename from t_goods_category t where t.id = g.cateCode)cateName,
			(select t.catename from t_goods_category t where t.id = g.subcateCode)subcateName,
			(select point from t_agent_point t where t.pointId = g.pointid) point,
			(select t.agentname from t_agent t where t.id = g.agentid)agentname, 
			g.*
		 from t_goods g where g.goodsid not in (select a.goodsid from t_area_goods a where a.areaid = #{areaid}) and g.`status` in (5,6) limit #{start},#{rows}
	</select>
	
	<select id="selectGoodsCount" resultType="int">
	    select count(1) from t_goods t where t.goodsid not in (select a.goodsid from t_area_goods a where a.areaid = #{areaid}) and t.`status` in (5,6)
	</select>
	
</mapper>